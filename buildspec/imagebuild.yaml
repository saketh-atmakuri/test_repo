version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "992382675927.dkr.ecr.ap-south-1.amazonaws.com/code_build_testing"
    AWS_REGION: "ap-south-1"
    AWS_ACCOUNT_ID: "992382675927"
    EKS_CLUSTER_NAME: "saketh_stag_eks"
    HELM_RELEASE_NAME: "eks-test"
    HELM_CHART_PATH: "eks-test"

phases:
  install:
    commands:
      - echo Installing Helm...
      - curl -LO https://get.helm.sh/helm-v3.11.2-linux-amd64.tar.gz
      - tar -zxvf helm-v3.11.2-linux-amd64.tar.gz
      - mv linux-amd64/helm /usr/local/bin/helm
      - helm version

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
      - echo Setting the date and time tag...
      - DATE_TAG=$(date +'%Y%m%d%H%M%S')
      - IMAGE_TAG=$DATE_TAG
      - echo IMAGE_TAG=$IMAGE_TAG

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -f Dockerfile -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $IMAGE_REPO_NAME:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image to ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - docker push $IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push $IMAGE_REPO_NAME:latest
      - echo Updating Kubernetes deployment with Helm...
      - aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
      - kubectl get pods -A
      - helm upgrade --install $HELM_RELEASE_NAME $HELM_CHART_PATH --set image.tag=$IMAGE_TAG --set image.repository=$IMAGE_REPO_NAME
      # testing for ecr pipeline

artifacts:
  files:
    - '**/*'
